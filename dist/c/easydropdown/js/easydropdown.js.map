{"version":3,"sources":["webpack://easydropdown/webpack/universalModuleDefinition","webpack://easydropdown/webpack/bootstrap","webpack://easydropdown/./src/Shared/Util/dispatchOpen.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/index.js","webpack://easydropdown/./src/Shared/Util/composeClassName.ts","webpack://easydropdown/./src/Shared/Util/killSelectReaction.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Constants/ArrayStrategy.js","webpack://easydropdown/./src/State/Option.ts","webpack://easydropdown/./src/State/Group.ts","webpack://easydropdown/./src/State/Constants/ScrollStatus.ts","webpack://easydropdown/./src/State/Constants/BodyStatus.ts","webpack://easydropdown/./src/Renderer/Constants/DomChangeType.ts","webpack://easydropdown/./src/Renderer/Constants/AttributeChangeType.ts","webpack://easydropdown/./src/Events/Handlers/handleWindowClick.ts","webpack://easydropdown/./src/Events/Constants/KeyCodes.ts","webpack://easydropdown/./src/Shared/Util/Constants/CollisionType.ts","webpack://easydropdown/./src/Events/Constants/Selectors.ts","webpack://easydropdown/./src/Shared/Util/closestParent.ts","webpack://easydropdown/./src/Config/Config.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Messages.js","webpack://easydropdown/./node_modules/helpful-merge/dist/merge.js","webpack://easydropdown/./src/Easydropdown/cache.ts","webpack://easydropdown/./src/Easydropdown/EasydropdownFacade.ts","webpack://easydropdown/./src/Easydropdown/Timers.ts","webpack://easydropdown/./src/State/State.ts","webpack://easydropdown/./src/Shared/Util/isMobilePlatform.ts","webpack://easydropdown/./src/State/StateMapper.ts","webpack://easydropdown/./src/State/resolveActions.ts","webpack://easydropdown/./src/State/StateManager.ts","webpack://easydropdown/./src/State/InjectedActions/scrollToView.ts","webpack://easydropdown/./src/State/InjectedActions/closeOthers.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectMutation.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectChange.ts","webpack://easydropdown/./src/Renderer/domPatch.ts","webpack://easydropdown/./src/Renderer/PatchCommand.ts","webpack://easydropdown/./src/Renderer/domDiff.ts","webpack://easydropdown/./src/Renderer/Dom.ts","webpack://easydropdown/./src/Shared/Util/createDomElementFromHtml.ts","webpack://easydropdown/./src/Components/value.ts","webpack://easydropdown/./src/Components/arrow.ts","webpack://easydropdown/./src/Components/head.ts","webpack://easydropdown/./src/Components/option.ts","webpack://easydropdown/./src/Components/group.ts","webpack://easydropdown/./src/Components/body.ts","webpack://easydropdown/./src/Components/root.ts","webpack://easydropdown/./src/Renderer/Renderer.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeypress.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownUp.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownDown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectInvalid.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectFocus.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectBlur.ts","webpack://easydropdown/./src/Events/Handlers/handleItemsListScroll.ts","webpack://easydropdown/./src/Shared/Util/detectBodyCollision.ts","webpack://easydropdown/./src/Events/Handlers/handleHeadClick.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMouseover.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyClick.ts","webpack://easydropdown/./src/Events/getEventsList.ts","webpack://easydropdown/./src/Events/EventBinding.ts","webpack://easydropdown/./src/Shared/Util/throttle.ts","webpack://easydropdown/./src/Events/bindEvents.ts","webpack://easydropdown/./src/Config/ClassNames.ts","webpack://easydropdown/./src/Config/Callbacks.ts","webpack://easydropdown/./src/Config/Behavior.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/handleMergeError.js","webpack://easydropdown/./node_modules/helpful-merge/dist/FluentMerge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/Config.js","webpack://easydropdown/./src/Easydropdown/Easydropdown.ts","webpack://easydropdown/./src/Easydropdown/factory.ts","webpack://easydropdown/./src/Shared/Polyfills/Element.matches.ts","webpack://easydropdown/./node_modules/custom-event-polyfill/custom-event-polyfill.js","webpack://easydropdown/./src/umd.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","detectBodyCollision_1","dispatchOpen","injectedDetectBodyCollision","actions","config","dom","collisionData","maxVisibleItems","maxVisibleItemsOverride","behavior","isScrollable","item","length","maxBodyHeight","sumItemsHeight","open","type","boundDispatchOpen","bind","default","merge_1","ArrayStrategy_1","ArrayStrategy","tokens","reduce","classNames","token","push","predicate","className","join","select","_a","timers","clearTimeout","keyingTimeoutId","keying","setTimeout","resetKeying","disabled","focus","Option","this","label","isDisabled","Group","options","ScrollStatus","BodyStatus","DomChangeType","AttributeChangeType","_","state","isOpen","close","blur","UP","DOWN","SPACE","ENTER","ESC","CollisionType","OPTION","el","selector","includeSelf","parent","parentNode","matches","document","body","Behavior_1","Callbacks_1","ClassNames_1","Config","callbacks","seal","MERGE_ERROR","offender","suggestion","TYPE_ERROR_TARGET","target","TYPE_ERROR_SOURCE","source","INVALID_ARRAY_STRATEGY","strategy","Config_1","FluentMerge_1","handleMergeError_1","Messages","merge","sourceKeys","deep","PUSH","REPLACE","indexOf","arrayStrategy","RangeError","TypeError","Array","isArray","apply","toString","getOwnPropertyNames","_i","sourceKeys_1","key","descriptor","getOwnPropertyDescriptor","set","includeReadOnly","includeNonEmurable","useReferenceIfArray","useReferenceIfTargetUnset","err","errorMessage","keys","forEach","method","args","arguments","createFluent","EasydropdownFacade","implementation","refresh","destroy","defineProperties","nextValue","Timers","clear","_this","clearInterval","helpful_merge_1","BodyStatus_1","ScrollStatus_1","Group_1","Option_1","State","stateRaw","groups","focusedIndex","selectedIndex","placeholder","scrollStatus","AT_TOP","bodyStatus","CLOSED","isRequired","isInvalid","isFocused","isUseNativeMode","isSearching","isKeying","map","groupRaw","group","optionRaw","total","totalOptions","getOptionFromIndex","selectedOption","hasValue","hasPlaceholder","showPlaceholderWhenOpen","Boolean","find","hasLabel","OPEN_ABOVE","OPEN_BELOW","AT_BOTTOM","index","groupStartIndex","Math","max","getOptionIndexFromValue","_b","_c","userAgent","isIos","test","isAndroid","isOperaMini","isWindowsPhone","isMobilePlatform_1","State_1","StateMapper","mapFromSelect","selectElement","isWithinGroup","required","useNativeUiOnMobile","navigator","child","children","getAttribute","HTMLOptionElement","mapGroup","lastGroup","mapOption","selected","HTMLOptGroupElement","tagName","j","groupChild","textContent","option","isParentGroupDisabled","CollisionType_1","invalidate","validate","topOut","bottomOut","scroll","SCROLLED","makeScrollable","makeUnscrollable","collisionType","closeOthers","NONE","TOP","BOTTOM","scrollToView","selectOption","optionAtIndex","focusOption","shouldScrollToView","scrollToMiddle","abs","search","resetSearch","useNative","resolveActions_1","StateManager","proxyActions","injectedActions","onAction","stateProxy","createStateProxy","getPropertyDescriptorsFromValue","proxy","getPrototypeOf","concat","localDescriptors","isAccessorProperty","readPropertyValue","updatePropertyValue","getScrollTop","currentScrollTop","optionOffsetTop","optionHeight","bodyHeight","scrollOffset","remainder","offset","offsetHeight","scrollTop","itemsList","offsetTop","thisInstance","cache","cache_1","instance","POLL_INTERVAL_DURATION","handleMutation","lastOuterHtml","outerHTML","setInterval","lastValue","AttributeChangeType_1","DomChangeType_1","patchAttributes","attributeChanges","raf","requestAnimationFrame","change","patchAttribute","ADD","EDIT","setAttribute","REMOVE","removeAttribute","domPatch","node","command","parentElement","replaceChild","newNode","INNER","Text","newTextContent","childCommands","childCommand","childNodes","innerHTML","newInnerHtml","OUTER","FULL","PatchCommand","PatchCommand_1","diffAttributeChanges","prev","next","totalAttributes","attributes","attributesMap","attr1","attr2","sort","attr","domDiff","totalChildNodes","HTMLSelectElement","HTMLElement","childNode","Dom","head","arrow","Infinity","totalHeight","html","temp","createElement","firstElementChild","isPlaceholderShown","humanReadableValue","arrow_1","value_1","composeClassName_1","optionState","isSelected","optionSelected","focusedOption","optionFocused","optionDisabled","option_1","groupState","groupDisabled","groupHasLabel","groupLabel","group_1","isAtTop","bodyAtTop","isAtBottom","bodyAtBottom","bodyScrollable","styleAttr","gradientTop","gradientBottom","body_1","head_1","rootDisabled","rootInvalid","rootOpen","rootFocused","rootHasValue","isOpenAbove","rootOpenAbove","isOpenBelow","rootOpenBelow","rootNative","root_1","createDomElementFromHtml_1","Dom_1","domDiff_1","domPatch_1","Renderer","render","rootElement","queryDomRefs","injectSelect","update","nextHtml","nextRoot","diffCommand","syncSelectWithValue","classList","remove","tempSelect","Error","event","CustomEvent","bubbles","dispatchEvent","localDom","ref","elements","querySelectorAll","element","KeyCodes","SEARCH_RESET_DURATION","searchResetDuration","keyCode","includes","searchTimeoutId","dispatchOpen_1","killSelectReaction_1","e","handlerParams","metaKey","iterations","incrementAmount","preventDefault","round","loop","isClosed","handleSelectKeydownDown_1","handleSelectKeydownUp_1","stopPropagation","openOnFocus","scrollHeight","CLEARSPACE","mapCollisionData","deltaTop","deltaBottom","maxHeight","itemHeight","largestDelta","floor","bbHead","getBoundingClientRect","wh","innerHeight","top","bottom","min","closestParent_1","Selectors","optionIndex","handleBodyClick_1","handleBodyMouseover_1","handleHeadClick_1","handleItemsListScroll_1","handleSelectBlur_1","handleSelectFocus_1","handleSelectInvalid_1","handleSelectKeydown_1","handleSelectKeypress_1","handleWindowClick_1","handleWindowClick_2","handler","documentElement","throttle","EventBinding","eventBindingRaw","debounce","boundHandler","passive","unbind","removeEventListener","delay","timerId","last","now","Date","later","difference","throttle_1","EventBinding_1","getEventsList_1","bindEvent","eventBinding","addEventListener","ClassNames","Callbacks","onOpen","onClose","onSelect","Behavior","closeOnSelect","clampMaxVisibleItems","liveUpdates","getTotalMatching","possibleKey","offendingKey","longer","shorter","leftPointer","leftInnerPointer","leftTotalMatching","lastCommonIndex","rightPointer","rightInnerPointer","rightTotalMatching","longerLastIndex","shorterLastIndex","message","isSealed","isExtensible","reducer","offendingKeyLower","currBestMatch","currKey","totalMatching","toLowerCase","delta","primer","bestMatch","FluentMerge","sources","to","from","with","exec","bindEvents_1","Renderer_1","pollForSelectChange_1","pollForSelectMutation_1","closeOthers_1","scrollToView_1","StateManager_1","StateMapper_1","Timers_1","Easydropdown","renderer","handleStateUpdate","eventBindings","pollChangeIntervalId","pollMutationIntervalId","binding","cacheIndex","splice","cb","Easydropdown_1","EasydropdownFacade_1","selectElementOrSelector","querySelector","multiple","cache_2","cachedInstance","factoryFn","decoratedFactory","all","selects","slice","Element","msMatchesSelector","ce","defaultPrevented","params","evt","origPrevent","cancelable","detail","undefined","createEvent","initCustomEvent","Event","factory_1"],"mappings":"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","file":"easydropdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easydropdown\"] = factory();\n\telse\n\t\troot[\"easydropdown\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 70);\n","import Config   from '../../Config/Config';\nimport Dom      from '../../Renderer/Dom';\nimport IActions from '../../State/Interfaces/IActions';\n\nimport detectBodyCollision from './detectBodyCollision';\nimport IDispatchOpen       from './Interfaces/IDispatchOpen';\n\nfunction dispatchOpen(\n    injectedDetectBodyCollision,\n    actions: IActions,\n    config: Config,\n    dom: Dom\n): void {\n    const collisionData = injectedDetectBodyCollision(dom, config);\n\n    const maxVisibleItems = collisionData.maxVisibleItemsOverride > -1 ?\n        collisionData.maxVisibleItemsOverride : config.behavior.maxVisibleItems;\n\n    const isScrollable = dom.item.length > maxVisibleItems;\n    const maxBodyHeight =  dom.sumItemsHeight(maxVisibleItems);\n\n    actions.open(maxBodyHeight, collisionData.type, isScrollable);\n}\n\nconst boundDispatchOpen: IDispatchOpen = dispatchOpen.bind(null, detectBodyCollision);\n\nexport {\n    boundDispatchOpen as default,\n    dispatchOpen\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nexports.ArrayStrategy = ArrayStrategy_1.default;\nexports.default = merge_1.default;\n//# sourceMappingURL=index.js.map","function composeClassName(tokens: Array<string|[boolean, string]>): string {\n    return tokens\n        .reduce((classNames, token) => {\n            if (typeof token === 'string') classNames.push(token);\n            else {\n                const [predicate, className] = token;\n\n                if (predicate) classNames.push(className);\n            }\n\n            return classNames;\n        }, [])\n        .join(' ');\n}\n\nexport default composeClassName;","import IHandlerParams from '../../Events/Interfaces/IHandlerParams';\n\nconst killSelectReaction = (select: HTMLSelectElement, {actions, timers}: IHandlerParams): void => {\n    const keyingResetDuration = 100;\n\n    window.clearTimeout(timers.keyingTimeoutId);\n\n    actions.keying();\n\n    timers.keyingTimeoutId = window.setTimeout(() => actions.resetKeying(), keyingResetDuration);\n\n    select.disabled = true;\n\n    setTimeout(() => {\n        select.disabled = false;\n        select.focus();\n    });\n};\n\nexport default killSelectReaction;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy;\n(function (ArrayStrategy) {\n    ArrayStrategy[\"PUSH\"] = \"PUSH\";\n    ArrayStrategy[\"REPLACE\"] = \"REPLACE\";\n})(ArrayStrategy || (ArrayStrategy = {}));\nexports.default = ArrayStrategy;\n//# sourceMappingURL=ArrayStrategy.js.map","class Option {\n    public label:      string  = '';\n    public value:      string  = '';\n    public isDisabled: boolean = false;\n}\n\nexport default Option;","import Option from './Option';\n\nclass Group {\n    public label:      string   = '';\n    public options:    Option[] = [];\n    public isDisabled: boolean  = false;\n\n    public get totalOptions(): number {\n        return this.options.length;\n    }\n\n    public get hasLabel(): boolean {\n        return this.label !== '';\n    }\n}\n\nexport default Group;","enum ScrollStatus {\n    AT_TOP    = 'AT_TOP',\n    SCROLLED  = 'SCROLLED',\n    AT_BOTTOM = 'AT_BOTTOM'\n}\n\nexport default ScrollStatus;","enum BodyStatus {\n    CLOSED     = 'CLOSED',\n    OPEN_ABOVE = 'OPEN_ABOVE',\n    OPEN_BELOW = 'OPEN_BELOW'\n}\n\nexport default BodyStatus;","export enum DomChangeType {\n    NONE    = 'NONE',\n    FULL    = 'FULL',\n    REPLACE = 'REPLACE',\n    INNER   = 'INNER',\n    OUTER   = 'OUTER'\n}\n\nexport default DomChangeType;","enum AttributeChangeType {\n    ADD = 'ADD',\n    EDIT = 'EDIT',\n    REMOVE = 'REMOVE'\n}\n\nexport default AttributeChangeType;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleWindowClick(_, {state, actions, dom}: IHandlerParams): void {\n    if (!state.isOpen) return;\n\n    actions.close();\n\n    dom.select.blur();\n}\n\nexport default handleWindowClick;","export const UP    = 38;\nexport const DOWN  = 40;\nexport const SPACE = 32;\nexport const ENTER = 13;\nexport const ESC   = 27;","enum CollisionType {\n    NONE   = 'NONE',\n    TOP    = 'TOP',\n    BOTTOM = 'BOTTOM'\n}\n\nexport default CollisionType;","export const OPTION = '[data-ref~=\"option\"]';","/**\n * Returns the closest parent of a given element matching the\n * provided selector, optionally including the element itself.\n */\n\nfunction closestParent(\n    el: HTMLElement,\n    selector: string,\n    includeSelf: boolean = false\n): HTMLElement {\n    let parent = el.parentNode as HTMLElement;\n\n    if (includeSelf && el.matches(selector)) {\n        return el;\n    }\n\n    while (parent && parent !== document.body) {\n        if (parent.matches && parent.matches(selector)) {\n            return parent;\n        } else if (parent.parentNode) {\n            parent = parent.parentNode as HTMLElement;\n        } else {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nexport default closestParent;","import Behavior   from './Behavior';\nimport Callbacks  from './Callbacks';\nimport ClassNames from './ClassNames';\nimport IConfig    from './Interfaces/IConfig';\n\nclass Config implements IConfig {\n    public callbacks = new Callbacks();\n    public classNames = new ClassNames();\n    public behavior = new Behavior();\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Config;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MERGE_ERROR = function (offender, suggestion) {\n    if (suggestion === void 0) { suggestion = ''; }\n    return \"Unknown property \\\"\" + offender + \"\\\"\" + (suggestion ? \". Did you mean \\\"\" + suggestion + \"\\\"?\" : '');\n};\nexports.TYPE_ERROR_TARGET = function (target) {\n    return \"[Helpful Merge] Target \\\"\" + target + \"\\\" must be a valid object\";\n};\nexports.TYPE_ERROR_SOURCE = function (source) {\n    return \"[Helpful Merge] Source \\\"\" + source + \"\\\" must be a valid object\";\n};\nexports.INVALID_ARRAY_STRATEGY = function (strategy) {\n    return \"[Helpful Merge] Invalid array strategy \\\"\" + strategy + \"\\\"\";\n};\n//# sourceMappingURL=Messages.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Config_1 = require(\"./Config\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar FluentMerge_1 = require(\"./FluentMerge\");\nvar handleMergeError_1 = require(\"./handleMergeError\");\nvar Messages = require(\"./Messages\");\nfunction merge(target, source, options) {\n    if (options === void 0) { options = null; }\n    var sourceKeys = [];\n    var config;\n    if (options instanceof Config_1.default) {\n        config = options;\n    }\n    else {\n        config = new Config_1.default();\n    }\n    if (typeof options === 'boolean' && options === true) {\n        config.deep = true;\n    }\n    else if (options && config !== options && typeof options === 'object') {\n        merge(config, options);\n        if ([ArrayStrategy_1.default.PUSH, ArrayStrategy_1.default.REPLACE].indexOf(config.arrayStrategy) < 0) {\n            throw RangeError(Messages.INVALID_ARRAY_STRATEGY(config.arrayStrategy));\n        }\n    }\n    if (!target || typeof target !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_TARGET(target));\n    }\n    if (!source || typeof source !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_SOURCE(source));\n    }\n    if (Array.isArray(source)) {\n        if (config.arrayStrategy === ArrayStrategy_1.default.PUSH) {\n            // Merge arrays via push()\n            target.push.apply(target, source);\n            return target;\n        }\n        for (var i = 0; i < source.length; i++) {\n            sourceKeys.push(i.toString());\n        }\n    }\n    else {\n        sourceKeys = Object.getOwnPropertyNames(source);\n    }\n    for (var _i = 0, sourceKeys_1 = sourceKeys; _i < sourceKeys_1.length; _i++) {\n        var key = sourceKeys_1[_i];\n        var descriptor = Object.getOwnPropertyDescriptor(source, key);\n        // Skip read-only properties\n        if (typeof descriptor.get === 'function' && !descriptor.set && !config.includeReadOnly)\n            continue;\n        // Skip non-enumerable properties\n        if (!descriptor.enumerable && !config.includeNonEmurable)\n            continue;\n        if (!config.deep ||\n            typeof source[key] !== 'object' ||\n            source[key] === null ||\n            (Array.isArray(source[key]) && config.useReferenceIfArray) ||\n            (!target[key] && config.useReferenceIfTargetUnset)) {\n            // If:\n            // - Shallow merge\n            // - All non-object primatives\n            // - Null pointers\n            // - Arrays, if `useReferenceIfArray` set\n            // - Target prop null or undefined and `useRererenceIfTargetUnset` set\n            try {\n                target[key] = source[key];\n            }\n            catch (err) {\n                handleMergeError_1.default(err, target, key, config.errorMessage);\n            }\n        }\n        else {\n            // Deep merge objects/arrays\n            if (!Object.prototype.hasOwnProperty.call(target, key) || target[key] === null) {\n                // If property does not exist on target, instantiate an empty\n                // object or array to merge into\n                try {\n                    target[key] = Array.isArray(source[key]) ? [] : {};\n                }\n                catch (err) {\n                    handleMergeError_1.default(err, target, key, config.errorMessage);\n                }\n            }\n            // Recursively deep copy objects or arrays\n            merge(target[key], source[key], config);\n        }\n    }\n    return target;\n}\nvar createFluent = function (method) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return (_a = new FluentMerge_1.default())[method].apply(_a, args);\n    var _a;\n}; };\nObject\n    .keys(FluentMerge_1.default.prototype)\n    .forEach(function (method) { return merge[method] = createFluent(method); });\nexports.default = merge;\n//# sourceMappingURL=merge.js.map","import Easydropdown from './Easydropdown';\n\nconst cache: Easydropdown[] = [];\n\nexport default cache;","import Easydropdown from './Easydropdown';\n\nclass EasydropdownFacade {\n    /**\n     * Programmatically opens the dropdown, closing any\n     * other open instances.\n     */\n\n    public open: () => void;\n\n    /**\n     * Programmatically closes the dropdown.\n     */\n\n    public close: () => void;\n\n    /**\n     * Refreshes the instance and updates the DOM in\n     * response to a change in the underlying `<select>`\n     * element (for example, adding or removing an option).\n     */\n\n    public refresh: () => void;\n\n    /**\n     * Destroys the instance by removing all EasyDropDown-generated\n     * elements from the DOM, and unbinding all event handlers.\n     * The underlying select is returned to the root position.\n     */\n\n    public destroy: () => void;\n\n    /**\n     * An accessor property allowing writing to and reading\n     * from the dropdown's value.\n     */\n\n    public value: string;\n\n    constructor(implementation: Easydropdown) {\n        this.open = implementation.open.bind(implementation);\n        this.close = implementation.close.bind(implementation);\n        this.refresh = implementation.refresh.bind(implementation);\n        this.destroy = implementation.destroy.bind(implementation);\n\n        Object.defineProperties(this, {\n            value: {\n                get: () => implementation.value,\n                set: (nextValue: string) => implementation.value = nextValue\n            }\n        });\n    }\n}\n\nexport default EasydropdownFacade;","class Timers {\n    public pollChangeIntervalId: number;\n    public pollMutationIntervalId: number;\n    public searchTimeoutId: number;\n    public keyingTimeoutId: number;\n\n    public clear(): void {\n        Object.keys(this).forEach(key => window.clearInterval(this[key]));\n    }\n}\n\nexport default Timers;","import merge from 'helpful-merge';\n\nimport Config from '../Config/Config';\n\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport Group        from  './Group';\nimport Option       from './Option';\n\nclass State {\n    public groups:                  Group[]      = [];\n    public focusedIndex:            number       = -1;\n    public selectedIndex:           number       = -1;\n    public maxVisibleItemsOverride: number       = -1;\n    public maxBodyHeight:           number       = -1;\n    public name:                    string       = '';\n    public placeholder:             string       = '';\n    public scrollStatus:            ScrollStatus = ScrollStatus.AT_TOP;\n    public bodyStatus:              BodyStatus   = BodyStatus.CLOSED;\n    public isDisabled:              boolean      = false;\n    public isRequired:              boolean      = false;\n    public isInvalid:               boolean      = false;\n    public isFocused:               boolean      = false;\n    public isUseNativeMode:         boolean      = false;\n    public isScrollable:            boolean      = false;\n    public isSearching:             boolean      = false;\n    public isKeying:                boolean      = false;\n\n    private config: Config;\n\n    constructor(stateRaw: any = null, config = new Config()) {\n        this.config = config;\n\n        if (!stateRaw) return;\n\n        merge(this, stateRaw);\n\n        this.groups = this.groups.map((groupRaw) => {\n            const group = merge(new Group(), groupRaw);\n\n            group.options = group.options.map(optionRaw => merge(new Option(), optionRaw));\n\n            return group;\n        });\n    }\n\n    public get totalGroups(): number {\n        return this.groups.length;\n    }\n\n    public get lastGroup(): Group {\n        return this.groups[this.groups.length - 1];\n    }\n\n    public get totalOptions(): number {\n        return this.groups.reduce((total: number, group: Group) => total + group.totalOptions, 0);\n    }\n\n    public get selectedOption(): Option {\n        return this.getOptionFromIndex(this.selectedIndex);\n    }\n\n    public get focusedOption(): Option {\n        return this.getOptionFromIndex(this.focusedIndex);\n    }\n\n    public get value(): string {\n        return this.selectedOption ? this.selectedOption.value : '';\n    }\n\n    public get humanReadableValue(): string {\n        if (\n            (!this.hasValue && this.hasPlaceholder) ||\n            (\n                this.config.behavior.showPlaceholderWhenOpen &&\n                this.hasPlaceholder &&\n                this.isOpen\n            )\n        ) {\n            return this.placeholder;\n        }\n\n        return this.label;\n    }\n\n    public get label(): string {\n        return this.selectedOption ? this.selectedOption.label : '';\n    }\n\n    public get hasPlaceholder(): boolean {\n        return this.placeholder !== '';\n    }\n\n    public get isPlaceholderShown(): boolean {\n        return this.hasPlaceholder && !this.hasValue;\n    }\n\n    public get hasValue(): boolean {\n        return this.value !== '';\n    }\n\n    public get isGrouped(): boolean {\n        return Boolean(this.groups.find(group => group.hasLabel));\n    }\n\n    public get isOpen(): boolean {\n        return this.bodyStatus !== BodyStatus.CLOSED;\n    }\n\n    public get isClosed(): boolean {\n        return this.bodyStatus === BodyStatus.CLOSED;\n    }\n\n    public get isOpenAbove(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_ABOVE;\n    }\n\n    public get isOpenBelow(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_BELOW;\n    }\n\n    public get isAtTop(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_TOP;\n    }\n\n    public get isAtBottom(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_BOTTOM;\n    }\n\n    public getOptionFromIndex(index: number): Option {\n        let groupStartIndex = 0;\n\n        for (const group of this.groups) {\n            if (index < 0 ) break;\n\n            const groupEndIndex = Math.max(0, groupStartIndex + group.totalOptions - 1);\n\n            if (index <= groupEndIndex) {\n                const option = group.options[index - groupStartIndex];\n\n                return option;\n            }\n\n            groupStartIndex += group.totalOptions;\n        }\n\n        return null;\n    }\n\n    public getOptionIndexFromValue(value: string): number {\n        let index: number = -1;\n\n        for (const group of this.groups) {\n            for (const option of group.options) {\n                index++;\n\n                if (option.value === value) {\n                    return index;\n                }\n            }\n        }\n\n        return -1;\n    }\n}\n\nexport default State;","function isMobilePlatform(userAgent: string): boolean {\n    const isIos = /(ipad|iphone|ipod)/gi.test(userAgent);\n    const isAndroid = /android/gi.test(userAgent);\n    const isOperaMini = /opera mini/gi.test(userAgent);\n    const isWindowsPhone = /windows phone/gi.test(userAgent);\n\n    if (isIos || isAndroid || isOperaMini || isWindowsPhone) {\n        return true;\n    }\n\n    return false;\n}\n\nexport default isMobilePlatform;","import merge from 'helpful-merge';\n\nimport Config           from '../Config/Config';\nimport isMobilePlatform from '../Shared/Util/isMobilePlatform';\n\nimport Group  from './Group';\nimport Option from './Option';\nimport State  from './State';\n\nclass StateMapper {\n    public static mapFromSelect(selectElement: HTMLSelectElement, config: Config): State {\n        const state = new State(null, config);\n\n        let isWithinGroup = false;\n\n        state.name = selectElement.name;\n        state.isDisabled = selectElement.disabled;\n        state.isRequired = selectElement.required;\n\n        state.isUseNativeMode = (\n            config.behavior.useNativeUiOnMobile &&\n            isMobilePlatform(window.navigator.userAgent)\n        );\n\n        for (let i = 0, child: Element; (child = selectElement.children[i]); i++) {\n            if (i === 0 && child.getAttribute('data-placeholder') !== null) {\n                state.placeholder = child.textContent;\n                (child as HTMLOptionElement).value = '';\n\n                continue;\n            }\n\n            if (child instanceof HTMLOptionElement) {\n                if (isWithinGroup === false) {\n                    state.groups.push(StateMapper.mapGroup());\n\n                    isWithinGroup = true;\n                }\n\n                state.lastGroup.options.push(StateMapper.mapOption(child));\n\n                if (child.selected) state.selectedIndex = state.totalOptions - 1;\n            } else if (child instanceof HTMLOptGroupElement) {\n                isWithinGroup = true;\n\n                state.groups.push(StateMapper.mapGroup(child));\n\n                for (let j = 0, groupChild: Element; (groupChild = child.children[j]); j++) {\n                    state.lastGroup.options.push(\n                        StateMapper.mapOption(\n                            groupChild as HTMLOptionElement,\n                            child as HTMLOptGroupElement\n                        )\n                    );\n\n                    if ((groupChild as HTMLOptionElement).selected) state.selectedIndex = state.totalOptions - 1;\n                }\n\n                isWithinGroup = false;\n            } else {\n                throw new TypeError(\n                    `[EasyDropDown] Invalid child tag \"${child.tagName}\" found in provided \\`<select>\\` element`\n                );\n            }\n        }\n\n        return Object.seal(state);\n    }\n\n    private static mapGroup(group: HTMLOptGroupElement = null): Group {\n        return merge(new Group(), {\n            label: group ? group.label : '',\n            isDisabled: group ? group.disabled : false\n        });\n    }\n\n    private static mapOption(option: HTMLOptionElement, group: HTMLOptGroupElement = null): Option {\n        if (!(option instanceof HTMLOptionElement)) throw new TypeError('[EasyDropDown] Invalid markup structure');\n\n        const isParentGroupDisabled = group !== null && group.disabled;\n\n        return merge(new Option(), {\n            label: option.textContent,\n            value: option.value,\n            isDisabled: option.disabled || isParentGroupDisabled\n        });\n    }\n}\n\nexport default StateMapper;","import CollisionType  from '../Shared/Util/Constants/CollisionType';\n\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport IActions     from './Interfaces/IActions';\nimport State        from './State';\n\nconst resolveActions = (state: State): IActions => ({\n    focus(): void {\n        state.isFocused = true;\n    },\n\n    blur(): void {\n        state.isFocused = false;\n    },\n\n    invalidate(): void {\n        state.isInvalid = true;\n    },\n\n    validate(): void {\n        state.isInvalid = false;\n    },\n\n    topOut(): void {\n        state.scrollStatus = ScrollStatus.AT_TOP;\n    },\n\n    bottomOut(): void {\n        state.scrollStatus = ScrollStatus.AT_BOTTOM;\n    },\n\n    scroll(): void {\n        state.scrollStatus = ScrollStatus.SCROLLED;\n    },\n\n    makeScrollable(): void {\n        state.isScrollable = true;\n    },\n\n    makeUnscrollable(): void {\n        state.isScrollable = false;\n    },\n\n    open(\n        this: IActions,\n        maxBodyHeight: number,\n        collisionType: CollisionType,\n        isScrollable: boolean\n    ): void {\n        if (state.isDisabled) return;\n\n        this.closeOthers();\n\n        switch (collisionType) {\n            case CollisionType.NONE:\n            case CollisionType.TOP:\n                state.bodyStatus = BodyStatus.OPEN_BELOW;\n\n                break;\n            case CollisionType.BOTTOM:\n                state.bodyStatus = BodyStatus.OPEN_ABOVE;\n\n                break;\n        }\n\n        state.isScrollable = isScrollable;\n        state.maxBodyHeight = maxBodyHeight;\n\n        this.scrollToView(state, true);\n    },\n\n    close(): void {\n        state.bodyStatus = BodyStatus.CLOSED;\n        state.focusedIndex = -1;\n    },\n\n    selectOption(this: IActions, index: number): void {\n        const optionAtIndex = state.getOptionFromIndex(index);\n\n        if (index > -1 && (!optionAtIndex || optionAtIndex.isDisabled)) return;\n\n        state.selectedIndex = index;\n\n        if (state.isInvalid) {\n            this.validate();\n        }\n\n        if (state.isSearching) {\n            this.scrollToView(state);\n        } else {\n            this.close();\n        }\n    },\n\n    focusOption(this: IActions, index: number, shouldScrollToView: boolean = false): void {\n        const scrollToMiddle = Math.abs(index - state.focusedIndex) > 1;\n\n        state.focusedIndex = index;\n\n        if (shouldScrollToView) {\n            this.scrollToView(state, scrollToMiddle);\n        }\n    },\n\n    search(): void {\n        state.isSearching = true;\n    },\n\n    resetSearch(): void {\n        state.isSearching = false;\n    },\n\n    keying(): void {\n        state.isKeying = true;\n    },\n\n    resetKeying(): void {\n        state.isKeying = false;\n    },\n\n    useNative(): void {\n        state.isUseNativeMode = true;\n    }\n});\n\nexport default resolveActions;","import merge from 'helpful-merge';\n\nimport IActions            from './Interfaces/IActions';\nimport IOnAction           from './Interfaces/IOnAction';\nimport IPropertyDescriptor from './Interfaces/IPropertyDescriptor';\nimport resolveActions      from './resolveActions';\nimport State               from './State';\n\nclass StateManager {\n    public static proxyActions(state: State, injectedActions: any, onAction: IOnAction): IActions {\n        const stateProxy = StateManager.createStateProxy(state, onAction);\n        const actions = resolveActions(stateProxy);\n\n        merge(actions, injectedActions);\n\n        return actions;\n    }\n\n    private static createStateProxy(state: State, onAction: IOnAction): State {\n        return Object.seal(\n            StateManager\n                .getPropertyDescriptorsFromValue(state, onAction)\n                .reduce((proxy, {key, get, set}) => Object.defineProperty(\n                    proxy,\n                    key,\n                    {\n                        enumerable: true,\n                        get,\n                        set\n                    }\n                ), {})\n        );\n    }\n\n    private static getPropertyDescriptorsFromValue(state: State, onAction: IOnAction): IPropertyDescriptor[] {\n        const prototype = Object.getPrototypeOf(state);\n        const allKeys = Object.keys(state).concat(Object.keys(prototype));\n\n        return allKeys\n            .reduce((localDescriptors, key) => {\n                const propertyDescriptor =\n                    Object.getOwnPropertyDescriptor(state, key) ||\n                    Object.getOwnPropertyDescriptor(prototype, key);\n\n                const isAccessorProperty = typeof propertyDescriptor.get === 'function';\n\n                localDescriptors.push({\n                    get: StateManager.readPropertyValue.bind(null, state, key),\n                    set: isAccessorProperty ?\n                        void 0 : StateManager.updatePropertyValue.bind(null, state, key, onAction),\n                    key\n                });\n\n                return localDescriptors;\n            }, []);\n    }\n\n    private static readPropertyValue(state: State, key: string): any {\n        return state[key];\n    }\n\n    private static updatePropertyValue(state: State, key: string, onAction: IOnAction, value: any): void {\n        if (state[key] === value) return;\n\n        state[key] = value;\n\n        onAction(state, key);\n    }\n}\n\nexport default StateManager;","import Timers from '../../Easydropdown/Timers';\nimport Dom    from '../../Renderer/Dom';\nimport State  from '../../State/State';\n\nfunction getScrollTop(\n    currentScrollTop: number,\n    optionOffsetTop: number,\n    optionHeight: number,\n    bodyHeight: number,\n    scrollOffset: number\n): number {\n    const max = currentScrollTop + bodyHeight;\n\n    let remainder: number;\n\n    if (optionOffsetTop < currentScrollTop) {\n        return optionOffsetTop - scrollOffset;\n    } else if ((remainder = (optionOffsetTop + optionHeight) - max) > 0) {\n        return currentScrollTop + remainder + scrollOffset;\n    }\n\n    return currentScrollTop;\n}\n\nfunction scrollToView(dom: Dom, timers: Timers, state: State, scrollToMiddle: boolean = false): void {\n    const index = Math.max(0, state.focusedIndex > -1 ? state.focusedIndex : state.selectedIndex);\n    const option = dom.option[index];\n\n    if (!option) return;\n\n    const offset = scrollToMiddle ? (state.maxBodyHeight / 2) - (option.offsetHeight / 2) : 0;\n\n    const scrollTop = getScrollTop(\n        dom.itemsList.scrollTop,\n        option.offsetTop,\n        option.offsetHeight,\n        state.maxBodyHeight,\n        offset\n    );\n\n    if (scrollTop === dom.itemsList.scrollTop) return;\n\n    dom.itemsList.scrollTop = scrollTop;\n}\n\nexport {\n    getScrollTop,\n    scrollToView as default\n};","import Easydropdown from '../../Easydropdown/Easydropdown';\n\nfunction closeOthers(thisInstance: Easydropdown, cache: Easydropdown[]): void {\n    for (const instance of cache) {\n        if (instance !== thisInstance) instance.actions.close();\n    }\n}\n\nexport default closeOthers;","import State from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 300;\n\nfunction pollForSelectMutation(selectElement: HTMLSelectElement, state: State, handleMutation: () => void): number {\n    let lastOuterHtml: string = selectElement.outerHTML;\n\n    const pollIntervalId = window.setInterval(() => {\n        const {outerHTML} = selectElement;\n\n        if (outerHTML !== lastOuterHtml && !state.isKeying) {\n            handleMutation();\n        }\n\n        lastOuterHtml = outerHTML;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectMutation;","import IActions from '../../State/Interfaces/IActions';\nimport State    from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 100;\n\nfunction pollForSelectChange(selectElement: HTMLSelectElement, state: State, actions: IActions): number {\n    let lastValue: string = selectElement.value;\n\n    const pollIntervalId = window.setInterval(() => {\n        if (selectElement.value !== lastValue) {\n            const selectedIndex = state.getOptionIndexFromValue(selectElement.value);\n\n            actions.selectOption(selectedIndex);\n            actions.focusOption(selectedIndex, true);\n        }\n\n        lastValue = selectElement.value;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectChange;","import AttributeChangeType from './Constants/AttributeChangeType';\nimport DomChangeType       from './Constants/DomChangeType';\nimport IAttributeChange    from './Interfaces/IAttributeChange';\nimport PatchCommand        from './PatchCommand';\n\nfunction domPatch(node: Node, command: PatchCommand): Node {\n    switch (command.type) {\n        case DomChangeType.NONE:\n            return node;\n        case DomChangeType.REPLACE:\n            node.parentElement.replaceChild(command.newNode, node);\n\n            return command.newNode;\n        case DomChangeType.INNER:\n            if (node instanceof Text) {\n                node.textContent = command.newTextContent;\n            } else if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            return node;\n        case DomChangeType.OUTER:\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n        case DomChangeType.FULL:\n            if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n    }\n}\n\nfunction patchAttributes(el: HTMLElement, attributeChanges: IAttributeChange[]): void {\n    const raf = window.requestAnimationFrame;\n\n    attributeChanges.forEach(change => {\n        if (raf && ['class', 'style'].indexOf(change.name) > -1) {\n            raf(() => patchAttribute(el, change));\n        } else {\n            patchAttribute(el, change);\n        }\n    });\n}\n\nfunction patchAttribute(el: HTMLElement, change: IAttributeChange): void {\n    switch (change.type) {\n        case AttributeChangeType.ADD:\n        case AttributeChangeType.EDIT:\n            el.setAttribute(change.name, change.value);\n\n            break;\n        case AttributeChangeType.REMOVE:\n            el.removeAttribute(change.name);\n\n            break;\n    }\n}\n\nexport default domPatch;","import DomChangeType    from './Constants/DomChangeType';\nimport IAttributeChange from './Interfaces/IAttributeChange';\n\nclass PatchCommand {\n    public type:             DomChangeType;\n    public newNode:          Node               = null;\n    public newInnerHtml:     string             = '';\n    public newTextContent:   string             = '';\n    public attributeChanges: IAttributeChange[] = [];\n    public childCommands:    PatchCommand[]      = [];\n    public index:            number             = null;\n}\n\nexport default PatchCommand;","import merge from 'helpful-merge';\n\nimport AttributeChangeType  from './Constants/AttributeChangeType';\nimport DomChangeType        from './Constants/DomChangeType';\nimport IAttributeChange     from './Interfaces/IAttributeChange';\nimport IPatchCommand        from './Interfaces/IPatchCommand';\nimport PatchCommand         from './PatchCommand';\n\nfunction domDiff(prev: Node, next: Node): PatchCommand {\n    let totalChildNodes = -1;\n\n    const command = new PatchCommand();\n\n    if (prev instanceof HTMLSelectElement) {\n        command.type = DomChangeType.NONE;\n\n        return command;\n    }\n\n    if (prev instanceof Text && next instanceof Text) {\n        if (prev.textContent === next.textContent) {\n            command.type = DomChangeType.NONE;\n        } else {\n            command.type = DomChangeType.INNER;\n            command.newTextContent = next.textContent;\n        }\n    } else if (prev instanceof HTMLElement && next instanceof HTMLElement) {\n        if (prev.tagName !== next.tagName) {\n            command.type = DomChangeType.REPLACE;\n            command.newNode = next;\n        } else if (prev.outerHTML === next.outerHTML) {\n            command.type = DomChangeType.NONE;\n        } else if (prev.innerHTML === next.innerHTML) {\n            merge(command, diffAttributeChanges(prev, next));\n        } else {\n            merge(command, diffAttributeChanges(prev, next));\n\n            if (command.attributeChanges.length > 0) {\n                command.type = DomChangeType.FULL;\n            } else {\n                command.type = DomChangeType.INNER;\n            }\n\n            if ((totalChildNodes = prev.childNodes.length) > 0 && totalChildNodes === next.childNodes.length) {\n                for (let i = 0, childNode; (childNode = prev.childNodes[i]); i++) {\n                    command.childCommands.push(domDiff(childNode, next.childNodes[i]));\n                }\n            } else {\n                command.newInnerHtml = next.innerHTML;\n            }\n        }\n    } else {\n        command.type = DomChangeType.REPLACE;\n        command.newNode = next;\n    }\n\n    return command;\n}\n\nfunction diffAttributeChanges(prev: HTMLElement, next: HTMLElement): IPatchCommand {\n    const totalAttributes = Math.max(prev.attributes.length, next.attributes.length);\n    const attributesMap   = {};\n    const undef           = void(0);\n    const attributeChanges: IAttributeChange[] = [];\n\n    for (let i = 0; i < totalAttributes; i++) {\n        const attr1 = prev.attributes[i];\n        const attr2 = next.attributes[i];\n\n        if (attr1 && attributesMap[attr1.name] === undef) {\n            attributesMap[attr1.name] = [];\n        }\n\n        if (attr2 && attributesMap[attr2.name] === undef) {\n            attributesMap[attr2.name] = [];\n        }\n\n        if (attr1) attributesMap[attr1.name][0] = attr1.value;\n        if (attr2) attributesMap[attr2.name][1] = attr2.value;\n    }\n\n    const keys = Object.keys(attributesMap);\n\n    if (keys.length > 1) {\n        keys.sort();\n    }\n\n    for (let i = 0, key; (key = keys[i]); i++) {\n        const attr = attributesMap[key];\n\n        const change: IAttributeChange = {\n            type: null,\n            name: key,\n            value: null\n        };\n\n        if (attr[0] === attr[1]) continue;\n\n        if (attr[0] === undef) {\n            change.type = AttributeChangeType.ADD;\n            change.value = attr[1];\n        } else if (attr[1] === undef) {\n            change.type = AttributeChangeType.REMOVE,\n            change.value = '';\n        } else {\n            change.type = AttributeChangeType.EDIT,\n            change.value = attr[1];\n        }\n\n        attributeChanges.push(change);\n    }\n\n    return {\n        type: DomChangeType.OUTER,\n        attributeChanges\n    };\n}\n\nexport default domDiff;","class Dom {\n    public select:    HTMLSelectElement = null;\n    public root:      HTMLDivElement    = null;\n    public head:      HTMLDivElement    = null;\n    public value:     HTMLDivElement    = null;\n    public body:      HTMLDivElement    = null;\n    public arrow:     HTMLDivElement    = null;\n    public itemsList: HTMLDivElement    = null;\n    public item:      HTMLDivElement[]  = [];\n    public group:     HTMLDivElement[]  = [];\n    public option:    HTMLDivElement[]  = [];\n\n    public sumItemsHeight(max: number = Infinity): number {\n        let totalHeight = 0;\n\n        for (let i = 0, item; (item = this.item[i]); i++) {\n            if (i === max) break;\n\n            totalHeight += item.offsetHeight;\n        }\n\n        return totalHeight;\n    }\n}\n\nexport default Dom;","function createDomElementFromHtml(html: string): Element {\n    const temp = document.createElement('div');\n\n    temp.innerHTML = html;\n\n    return temp.firstElementChild;\n}\n\nexport default createDomElementFromHtml;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nconst value = (state: State, classNames: ClassNames) => {\n    return (`\n        <div\n            class=\"${classNames.value}\"\n            data-ref=\"value\"\n            ${state.isPlaceholderShown ? `aria-placeholder=\"${state.humanReadableValue}\"` : ''}\n        >\n            ${state.humanReadableValue}\n        </div>\n    `);\n};\n\nexport default value;","import ClassNames from '../Config/ClassNames';\n\nconst arrow = (_, classNames: ClassNames) => `<div class=\"${classNames.arrow}\" role=\"presentation\"></div>`;\n\nexport default arrow;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nimport arrow from './arrow';\nimport value from './value';\n\nconst head = (state: State, classNames: ClassNames) => (`\n    <div class=\"${classNames.head}\" data-ref=\"head\">\n        ${value(state, classNames)}\n        ${arrow(state, classNames)}\n        <select class=\"${classNames.select}\" data-ref=\"select\"></select>\n    </div>\n`);\n\nexport default head;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Option           from '../State/Option';\nimport State            from '../State/State';\n\nfunction option(optionState: Option, state: State, classNames: ClassNames): string {\n    const isSelected = state.selectedOption === optionState;\n\n    const className = composeClassName([\n        classNames.option,\n        [isSelected, classNames.optionSelected],\n        [optionState === state.focusedOption, classNames.optionFocused],\n        [optionState.isDisabled, classNames.optionDisabled]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"option item\"\n            role=\"option\"\n            title=\"${optionState.label}\"\n            ${isSelected ? 'aria-selected=\"true\"' : ''}\n            ${optionState.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            >\n                ${optionState.label}\n        </div>\n    `);\n}\n\nexport default option;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Group            from '../State/Group';\nimport State            from '../State/State';\n\nimport option from './option';\n\nconst group = (groupState: Group, state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.group,\n        [groupState.isDisabled, classNames.groupDisabled],\n        [groupState.hasLabel, classNames.groupHasLabel]\n    ]);\n\n    return (`\n        <div class=\"${className}\" data-ref=\"group\" role=\"group\">\n            ${groupState.hasLabel ?\n                `<div class=\"${classNames.groupLabel}\" data-ref=\"item\">${groupState.label}</div>` : ''\n            }\n            ${groupState.options.map(optionState => option(optionState, state, classNames)).join('')}\n        </div>\n    `);\n};\n\nexport default group;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport group from './group';\n\nfunction body(state: State, classNames: ClassNames): string {\n    const className = composeClassName([\n        classNames.body,\n        [state.isAtTop, classNames.bodyAtTop],\n        [state.isAtBottom, classNames.bodyAtBottom],\n        [state.isScrollable, classNames.bodyScrollable]\n    ]);\n\n    const styleAttr = state.isOpen ?\n        `style=\"max-height: ${state.maxBodyHeight}px;\"` : '';\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"body\"\n            role=\"listbox\"\n            ${state.isOpen ? '' : 'aria-hidden'}\n        >\n            <div class=\"${classNames.itemsList}\"\n                data-ref=\"itemsList\"\n                ${styleAttr}>\n                ${state.groups.map(groupState => group(groupState, state, classNames)).join('')}\n            </div>\n            <div class=${classNames.gradientTop} role=\"presentation\"></div>\n            <div class=${classNames.gradientBottom} role=\"presentation\"></div>\n        </div>\n    `);\n}\n\nexport default body;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport body from './body';\nimport head from './head';\n\nconst root = (state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.root,\n        [state.isDisabled, classNames.rootDisabled],\n        [state.isInvalid, classNames.rootInvalid],\n        [state.isOpen, classNames.rootOpen],\n        [state.isFocused, classNames.rootFocused],\n        [state.hasValue, classNames.rootHasValue],\n        [state.isOpenAbove, classNames.rootOpenAbove],\n        [state.isOpenBelow, classNames.rootOpenBelow],\n        [state.isUseNativeMode, classNames.rootNative]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            role=\"widget combobox\"\n            aria-haspopup=\"listbox\"\n            ${state.isOpen ? 'aria-expanded=\"true\"' : ''}\n            ${state.isRequired ? 'aria-required=\"true\"' : ''}\n            ${state.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            ${state.isInvalid ? 'aria-invalid=\"true\"' : ''}\n        >\n            ${head(state, classNames)}\n            ${state.isUseNativeMode ? '' : body(state, classNames)}\n        </div>\n    `);\n};\n\nexport default root;","import root                     from '../Components/root';\nimport ClassNames               from '../Config/ClassNames';\nimport createDomElementFromHtml from '../Shared/Util/createDomElementFromHtml';\nimport State                    from '../State/State';\n\nimport Dom      from './Dom';\nimport domDiff  from './domDiff';\nimport domPatch from './domPatch';\n\nclass Renderer {\n    public classNames: ClassNames;\n    public dom: Dom;\n\n    constructor(classNames: ClassNames) {\n        this.dom = new Dom();\n        this.classNames = classNames;\n    }\n\n    public render(state: State, selectElement: HTMLSelectElement): Dom {\n        const html = root(state, this.classNames);\n        const rootElement = createDomElementFromHtml(html) as HTMLDivElement;\n\n        this.dom = new Dom();\n        this.dom.root = rootElement;\n\n        this.dom.option.length = this.dom.group.length = 0;\n\n        Renderer.queryDomRefs(this.dom);\n\n        this.injectSelect(selectElement);\n\n        return this.dom;\n    }\n\n    public update(state: State, key?: keyof State): void {\n        const nextHtml = root(state, this.classNames);\n        const nextRoot = createDomElementFromHtml(nextHtml) as HTMLDivElement;\n        const diffCommand = domDiff(this.dom.root, nextRoot);\n\n        domPatch(this.dom.root, diffCommand);\n\n        if (key === 'selectedIndex') {\n            this.syncSelectWithValue(state.value);\n        }\n    }\n\n    public destroy(): void {\n        this.dom.select.classList.remove(this.classNames.select);\n\n        try {\n            this.dom.root.parentElement.replaceChild(this.dom.select, this.dom.root);\n        } catch (err) { /**/ }\n    }\n\n    private injectSelect(selectElement: HTMLSelectElement): void {\n        const parent = selectElement.parentElement;\n        const tempSelect = this.dom.select;\n\n        if (!parent) throw new Error('[EasyDropDown] The provided `<select>` element must exist within a document');\n\n        parent.replaceChild(this.dom.root, selectElement);\n\n        tempSelect.parentElement.replaceChild(selectElement, tempSelect);\n        selectElement.className = this.classNames.select;\n        selectElement.setAttribute('aria-hidden', 'true');\n\n        this.dom.select = selectElement;\n    }\n\n    private syncSelectWithValue(value: string): void {\n        if (this.dom.select.value === value) return;\n\n        const event = new CustomEvent('change', {\n            bubbles: true\n        });\n\n        this.dom.select.value = value;\n\n        this.dom.select.dispatchEvent(event);\n    }\n\n    public static queryDomRefs(dom: Dom, keys: string[] = Object.keys(dom)): Dom {\n        return keys\n            .reduce((localDom: Dom, ref: string) => {\n                const selector = `[data-ref~=\"${ref}\"]`;\n                const elements = localDom.root.querySelectorAll(selector);\n\n                if (elements.length < 1 || ref === 'root') return localDom;\n\n                const element = elements[0];\n                const value = localDom[ref];\n\n                if (value === null) {\n                    localDom[ref] = element;\n                } else if (Array.isArray(value)) {\n                    Array.prototype.push.apply(value, elements);\n                }\n\n                return localDom;\n            }, dom);\n    }\n}\n\nexport default Renderer;","import * as KeyCodes  from '../Constants/KeyCodes';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nconst SEARCH_RESET_DURATION = 1200;\n\nfunction handleSelectKeypress(\n    {keyCode}: KeyboardEvent,\n    {actions, timers, state}: IHandlerParams,\n    searchResetDuration = SEARCH_RESET_DURATION\n): void {\n    if (state.isUseNativeMode || [KeyCodes.UP, KeyCodes.DOWN].includes(keyCode)) return;\n\n    window.clearTimeout(timers.searchTimeoutId);\n\n    actions.search();\n\n    timers.searchTimeoutId = window.setTimeout(() => actions.resetSearch(), searchResetDuration);\n}\n\nexport default handleSelectKeypress;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownUp(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, config, dom, actions} = handlerParams;\n\n    let focusedIndex = state.focusedIndex > -1 ?\n        state.focusedIndex : state.selectedIndex;\n\n    let iterations = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex -= incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex < 0) {\n            focusedIndex = config.behavior.loop ? state.totalOptions - 1 : 0;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations < state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectKeydownUp;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownDown(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, dom, actions, config} = handlerParams;\n\n    let focusedIndex: number = state.focusedIndex > -1 ?\n    state.focusedIndex : state.selectedIndex;\n\n    let iterations: number = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex += incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex >= state.totalOptions) {\n            focusedIndex = config.behavior.loop ? 0 : state.totalOptions - 1;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations <= state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        return;\n    }\n}\n\nexport default handleSelectKeydownDown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport * as KeyCodes      from '../Constants/KeyCodes';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nimport handleSelectKeydownDown from './handleSelectKeydownDown';\nimport handleSelectKeydownUp   from './handleSelectKeydownUp';\n\nfunction handleSelectKeydown(e: KeyboardEvent, handlerParams: IHandlerParams): void {\n    const {keyCode, target} = e;\n    const {state, actions, dom, config} = handlerParams;\n\n    if (state.isUseNativeMode || state.isDisabled) return;\n\n    switch (keyCode) {\n        case KeyCodes.DOWN:\n            handleSelectKeydownDown(e, handlerParams);\n\n            break;\n        case KeyCodes.UP:\n            handleSelectKeydownUp(e, handlerParams);\n\n            break;\n        case KeyCodes.SPACE:\n            if (state.isSearching) {\n                e.stopPropagation();\n\n                return;\n            }\n\n        case KeyCodes.ENTER:\n            e.stopPropagation();\n            e.preventDefault();\n\n            killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n            if (state.isOpen) {\n                actions.selectOption(state.focusedIndex);\n            } else {\n                dispatchOpen(actions, config, dom);\n            }\n\n            break;\n        case KeyCodes.ESC:\n            actions.close();\n\n            break;\n    }\n}\n\nexport default handleSelectKeydown;","import IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectInvalid(e: Event, {actions, config, dom}: IHandlerParams): void {\n    actions.invalidate();\n}\n\nexport default handleSelectInvalid;","import dispatchOpen   from '../../Shared/Util/dispatchOpen';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectFocus(e: Event, {actions, config, dom, state}: IHandlerParams): void {\n    actions.focus();\n\n    if (config.behavior.openOnFocus && !state.isUseNativeMode) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectFocus;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectBlur(e: Event, {actions, state}: IHandlerParams): void {\n    if (state.isKeying) return;\n\n    actions.blur();\n}\n\nexport default handleSelectBlur;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleItemsListScroll(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const {offsetHeight, scrollHeight, scrollTop} = dom.itemsList;\n\n    if (scrollTop === 0) {\n        actions.topOut();\n    } else if (scrollTop === scrollHeight - offsetHeight) {\n        actions.bottomOut();\n    } else {\n        actions.scroll();\n    }\n}\n\nexport default handleItemsListScroll;","import Config from '../../Config/Config';\nimport Dom    from '../../Renderer/Dom';\n\nimport CollisionType  from './Constants/CollisionType';\nimport ICollisionData from './Interfaces/ICollisionData';\n\nconst CLEARSPACE = 10;\n\nfunction mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight): ICollisionData {\n    let type = CollisionType.NONE;\n    let maxVisibleItemsOverride = -1;\n\n    if (deltaTop <= maxHeight && deltaBottom <= maxHeight) {\n        const largestDelta = Math.max(deltaBottom, deltaTop);\n\n        type = deltaTop < deltaBottom ? CollisionType.TOP : CollisionType.BOTTOM;\n        maxVisibleItemsOverride = Math.floor(largestDelta / itemHeight);\n    } else if (deltaTop <= maxHeight) {\n        type = CollisionType.TOP;\n    } else if (deltaBottom <= maxHeight) {\n        type = CollisionType.BOTTOM;\n    }\n\n    return {type, maxVisibleItemsOverride};\n}\n\nfunction detectBodyCollision(dom: Dom, config: Config): ICollisionData {\n    const bbHead = dom.head.getBoundingClientRect();\n    const wh = window.innerHeight;\n    const deltaTop = bbHead.top - CLEARSPACE;\n    const deltaBottom = wh - bbHead.bottom - CLEARSPACE;\n\n    if (dom.option.length < 1) return {\n        type: CollisionType.NONE,\n        maxVisibleItemsOverride: -1\n    };\n\n    const maxVisibleItems = Math.min(config.behavior.maxVisibleItems, dom.item.length);\n    const maxHeight = dom.sumItemsHeight(maxVisibleItems);\n    const itemHeight = dom.sumItemsHeight(1);\n\n    return mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight);\n}\n\nexport {\n    detectBodyCollision as default,\n    mapCollisionData\n};","import dispatchOpen   from '../../Shared/Util/dispatchOpen';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleHeadClick(e: MouseEvent, {state, actions, dom, config}: IHandlerParams): void {\n    if (state.isUseNativeMode) return;\n\n    e.stopPropagation();\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        dom.select.focus();\n    } else {\n        actions.close();\n    }\n}\n\nexport default handleHeadClick;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyMouseover(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option || state.isKeying) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.focusOption(optionIndex);\n}\n\nexport default handleBodyMouseover;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyClick(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.selectOption(optionIndex);\n}\n\nexport default handleBodyClick;","import Dom from '../Renderer/Dom';\n\nimport handleBodyClick       from './Handlers/handleBodyClick';\nimport handleBodyMouseover   from './Handlers/handleBodyMouseover';\nimport handleHeadClick       from './Handlers/handleHeadClick';\nimport handleItemsListScroll from './Handlers/handleItemsListScroll';\nimport handleSelectBlur      from './Handlers/handleSelectBlur';\nimport handleSelectFocus     from './Handlers/handleSelectFocus';\nimport handleSelectInvalid   from './Handlers/handleSelectInvalid';\nimport handleSelectKeydown   from './Handlers/handleSelectKeydown';\nimport handleSelectKeypress  from './Handlers/handleSelectKeypress';\nimport handleWindowClick     from './Handlers/handleWindowClick';\nimport handleWindowResize    from './Handlers/handleWindowClick';\nimport IEventBinding         from './Interfaces/IEventBinding';\n\nconst getEventsList = (dom: Dom): IEventBinding[] => [\n    {\n        target: dom.head,\n        type: 'click',\n        handler: handleHeadClick\n    },\n    {\n        target: dom.body,\n        type: 'click',\n        handler: handleBodyClick\n    },\n    {\n        target: dom.body,\n        type: 'mouseover',\n        handler: handleBodyMouseover\n    },\n    {\n        target: dom.itemsList,\n        type: 'scroll',\n        handler: handleItemsListScroll\n    },\n    {\n        target: dom.select,\n        type: 'keydown',\n        handler: handleSelectKeydown\n    },\n    {\n        target: dom.select,\n        type: 'invalid',\n        handler: handleSelectInvalid\n    },\n    {\n        target: dom.select,\n        type: 'keypress',\n        handler: handleSelectKeypress\n    },\n    {\n        target: dom.select,\n        type: 'focus',\n        handler: handleSelectFocus\n    },\n    {\n        target: dom.select,\n        type: 'blur',\n        handler: handleSelectBlur\n    },\n    {\n        target: document.documentElement,\n        type: 'click',\n        handler: handleWindowClick\n    },\n    {\n        target: window,\n        type: 'resize',\n        handler: handleWindowResize,\n        throttle: 100\n    }\n];\n\nexport default getEventsList;","import merge from 'helpful-merge';\n\nimport IEventBinding from './Interfaces/IEventBinding';\nimport IEventHandler from './Interfaces/IEventHandler';\n\nclass EventBinding implements IEventBinding {\n    public type:         string        = '';\n    public target:       HTMLElement   = null;\n    public debounce:     number        = 0;\n    public throttle:     number        = 0;\n    public handler:      IEventHandler = null;\n    public boundHandler: EventListener = null;\n    public passive:      boolean       = false;\n\n    constructor(eventBindingRaw: IEventBinding|string) {\n        merge(this, eventBindingRaw);\n\n        Object.seal(this);\n    }\n\n    public unbind(): void {\n        if (!this.target) return;\n\n        this.target.removeEventListener(this.type, this.boundHandler);\n    }\n}\n\nexport default EventBinding;","function throttle(\n    handler: (...args: any[]) => void,\n    delay: number\n): (...args: any[]) => void {\n    let timerId = null;\n    let last: number = -Infinity;\n\n    return function(...args): void {\n        const now = Date.now();\n\n        const later = () => {\n            timerId = null;\n\n            handler.apply(this, args);\n\n            last = now;\n        };\n\n        const difference = now - last;\n\n        if (difference >= delay) {\n            later();\n        } else {\n            clearTimeout(timerId);\n\n            timerId = setTimeout(later, delay - difference);\n        }\n    };\n}\n\nexport default throttle;","import throttle from '../Shared/Util/throttle';\n\nimport EventBinding   from './EventBinding';\nimport getEventsList  from './getEventsList';\nimport IEventBinding  from './Interfaces/IEventBinding';\nimport IHandlerParams from './Interfaces/IHandlerParams';\n\nfunction bindEvent(handlerParams: IHandlerParams, eventBindingRaw: IEventBinding): EventBinding {\n    const eventBinding = new EventBinding(eventBindingRaw);\n\n    if (!eventBinding.target) return eventBinding;\n\n    const boundHandler = (e) => eventBinding.handler(e, handlerParams);\n\n    if (eventBinding.throttle > 0) {\n        eventBinding.boundHandler = throttle(boundHandler, eventBinding.throttle);\n    } else {\n        eventBinding.boundHandler = boundHandler;\n    }\n\n    eventBinding.target.addEventListener(eventBinding.type, eventBinding.boundHandler);\n\n    return eventBinding;\n}\n\nfunction bindEvents(handlerParams: IHandlerParams): EventBinding[] {\n    return getEventsList(handlerParams.dom).map(bindEvent.bind(null, handlerParams));\n}\n\nexport {\n    bindEvents as default,\n    bindEvent\n};","import IClassNames from './Interfaces/IClassNames';\n\nclass ClassNames implements IClassNames {\n    public root:           string = 'edd-root';\n    public rootOpen:       string = 'edd-root-open';\n    public rootOpenAbove:  string = 'edd-root-open-above';\n    public rootOpenBelow:  string = 'edd-root-open-below';\n    public rootDisabled:   string = 'edd-root-disabled';\n    public rootInvalid:    string = 'edd-root-invalid';\n    public rootFocused:    string = 'edd-root-focused';\n    public rootHasValue:   string = 'edd-root-has-value';\n    public rootNative:     string = 'edd-root-native';\n    public gradientTop:    string = 'edd-gradient-top';\n    public gradientBottom: string = 'edd-gradient-bottom';\n    public head:           string = 'edd-head';\n    public value:          string = 'edd-value';\n    public arrow:          string = 'edd-arrow';\n    public select:         string = 'edd-select';\n    public body:           string = 'edd-body';\n    public bodyScrollable: string = 'edd-body-scrollable';\n    public bodyAtTop:      string = 'edd-body-at-top';\n    public bodyAtBottom:   string = 'edd-body-at-bottom';\n    public itemsList:      string = 'edd-items-list';\n    public group:          string = 'edd-group';\n    public groupDisabled:  string = 'edd-group-disabled';\n    public groupHasLabel:  string = 'edd-group-has-label';\n    public groupLabel:     string = 'edd-group-label';\n    public option:         string = 'edd-option';\n    public optionDisabled: string = 'edd-option-disabled';\n    public optionFocused:  string = 'edd-option-focused';\n    public optionSelected: string = 'edd-option-selected';\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default ClassNames;","import ICallback from './Interfaces/ICallback';\n\nclass Callbacks {\n    public onOpen:   ICallback = null;\n    public onClose:  ICallback = null;\n    public onSelect: ICallback = null;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Callbacks;","import IBehavior from './Interfaces/IBehavior';\n\nclass Behavior implements IBehavior {\n    public showPlaceholderWhenOpen: boolean = false;\n    public openOnFocus:             boolean = false;\n    public closeOnSelect:           boolean = false;\n    public useNativeUiOnMobile:     boolean = true;\n    public loop:                    boolean = false;\n    public clampMaxVisibleItems:    boolean = true;\n    public liveUpdates:             boolean = false;\n    public maxVisibleItems:         number  = 15;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Behavior;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction handleMergeError(err, target, offendingKey, message) {\n    // Rethrow if any of the following:\n    // - offending key already exists on target\n    // - object not sealed\n    // - is extensible\n    // - error not a TypeError\n    if (Object.hasOwnProperty.call(target, offendingKey) ||\n        !Object.isSealed(target) ||\n        Object.isExtensible(target) ||\n        !(err instanceof TypeError))\n        throw err;\n    var reducer = reduceBestMatch.bind(null, offendingKey, offendingKey.toLowerCase());\n    var primer = { key: '', delta: Infinity, totalMatching: 0 };\n    // Iterate through keys in target, for each key, compare with\n    // the offending key. Greatest number of matching characters wins.\n    var bestMatch = Object.keys(target).reduce(reducer, primer);\n    var suggestion = bestMatch && bestMatch.totalMatching > 1 ? bestMatch.key : '';\n    throw new TypeError(message(offendingKey, suggestion));\n}\n/**\n * Compares current key with current best match.\n */\nfunction reduceBestMatch(offendingKeyLower, offendingKey, currBestMatch, currKey) {\n    var totalMatching = getTotalMatching(currKey.toLowerCase(), offendingKeyLower);\n    var delta = Math.abs(currKey.length - offendingKey.length);\n    if (totalMatching > currBestMatch.totalMatching ||\n        (totalMatching === currBestMatch.totalMatching && delta < currBestMatch.delta)) {\n        // If a greater number of matching characters, or the same\n        // number, but a lesser delta, usurp the best match\n        return { key: currKey, delta: delta, totalMatching: totalMatching };\n    }\n    return currBestMatch;\n}\n/**\n * Returns the number of common, consecutive characters\n * between two strings.\n */\nfunction getTotalMatching(possibleKey, offendingKey) {\n    var longer = possibleKey.length > offendingKey.length ? possibleKey : offendingKey;\n    var shorter = longer === possibleKey ? offendingKey : possibleKey;\n    var leftPointer = 0;\n    var leftInnerPointer = 0;\n    var leftTotalMatching = 0;\n    var lastCommonIndex = -1;\n    for (; leftPointer < longer.length; leftPointer++) {\n        while (leftTotalMatching === 0 &&\n            longer[leftPointer] !== shorter[leftInnerPointer] &&\n            leftInnerPointer < shorter.length) {\n            // No match at present, move innerPointer through all possible\n            // indices until a match is found\n            leftInnerPointer++;\n        }\n        if (longer[leftPointer] === shorter[leftInnerPointer]) {\n            // Match found\n            if (lastCommonIndex !== leftPointer - 1) {\n                // If beginning of a new match, reset total common\n                leftTotalMatching = 0;\n            }\n            lastCommonIndex = leftPointer;\n            leftTotalMatching++;\n            leftInnerPointer++;\n            // Whole word matched, end\n            if (leftTotalMatching === shorter.length)\n                break;\n        }\n        else if (leftTotalMatching > 1) {\n            // No match, but at least two common characters found, end\n            break;\n        }\n        else {\n            // No match at this index, reset\n            leftTotalMatching = leftInnerPointer = 0;\n        }\n    }\n    lastCommonIndex = -1;\n    var rightPointer = 0;\n    var rightInnerPointer = 0;\n    var rightTotalMatching = 0;\n    var longerLastIndex = longer.length - 1;\n    var shorterLastIndex = shorter.length - 1;\n    // As above, but from right to left\n    for (; rightPointer < longer.length - leftPointer; rightPointer++) {\n        while (rightTotalMatching === 0 &&\n            longer[longerLastIndex - rightPointer] !== shorter[shorterLastIndex - rightInnerPointer] &&\n            rightInnerPointer < shorter.length) {\n            rightInnerPointer++;\n        }\n        if (longer[longerLastIndex - rightPointer] === shorter[shorterLastIndex - rightInnerPointer]) {\n            if (lastCommonIndex !== rightPointer - 1)\n                rightTotalMatching = 0;\n            lastCommonIndex = rightPointer;\n            rightTotalMatching++;\n            rightInnerPointer++;\n        }\n        else if (rightTotalMatching > 1) {\n            break;\n        }\n        else {\n            rightTotalMatching = rightInnerPointer = 0;\n        }\n    }\n    return Math.min(shorter.length, leftTotalMatching + rightTotalMatching);\n}\nexports.getTotalMatching = getTotalMatching;\nexports.default = handleMergeError;\n//# sourceMappingURL=handleMergeError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar FluentMerge = /** @class */ (function () {\n    function FluentMerge() {\n        this.target = null;\n        this.sources = [];\n        this.config = {};\n    }\n    /**\n     * Supplies a fluent merge instance with a target object to merge into and return.\n     */\n    FluentMerge.prototype.to = function (target) {\n        this.target = target;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with one or more source objects to merge from, in right to left order.\n     */\n    FluentMerge.prototype.from = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        this.sources = sources;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with a configuration object of one or more options.\n     */\n    FluentMerge.prototype.with = function (options) {\n        this.config = options;\n        return this;\n    };\n    /**\n     * Executes a fluent merge instance, merging all provided sources into the\n     * target, as per any provided configuration, and returning a reference to\n     * the target.\n     */\n    FluentMerge.prototype.exec = function () {\n        var _this = this;\n        return this.sources.reduce(function (target, source) { return merge_1.default(target, source, _this.config); }, this.target || {});\n    };\n    return FluentMerge;\n}());\nexports.default = FluentMerge;\n//# sourceMappingURL=FluentMerge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar Messages = require(\"./Messages\");\nvar Config = /** @class */ (function () {\n    function Config() {\n        this.deep = false;\n        this.useReferenceIfTargetUnset = false;\n        this.useReferenceIfArray = false;\n        this.includeReadOnly = false;\n        this.includeNonEmurable = false;\n        this.arrayStrategy = ArrayStrategy_1.default.REPLACE;\n        this.errorMessage = Messages.MERGE_ERROR;\n        Object.seal(this);\n    }\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","import merge from 'helpful-merge';\n\nimport Config                 from '../Config/Config';\nimport ICallback              from '../Config/Interfaces/ICallback';\nimport IConfig                from '../Config/Interfaces/IConfig';\nimport ISelectCallback        from '../Config/Interfaces/ISelectCallback';\nimport bindEvents             from '../Events/bindEvents';\nimport EventBinding           from '../Events/EventBinding';\nimport Dom                    from '../Renderer/Dom';\nimport Renderer               from '../Renderer/Renderer';\nimport dispatchOpen           from '../Shared/Util/dispatchOpen';\nimport pollForSelectChange    from '../Shared/Util/pollForSelectChange';\nimport pollForSelectMutation  from '../Shared/Util/pollForSelectMutation';\nimport closeOthers            from '../State/InjectedActions/closeOthers';\nimport scrollToView           from '../State/InjectedActions/scrollToView';\nimport IActions               from '../State/Interfaces/IActions';\nimport State                  from '../State/State';\nimport StateManager           from '../State/StateManager';\nimport StateMapper            from '../State/StateMapper';\n\nimport cache  from './cache';\nimport Timers from './Timers';\n\nclass Easydropdown {\n    public actions: IActions;\n\n    private config: Config;\n    private state: State;\n    private dom: Dom;\n    private eventBindings: EventBinding[];\n    private renderer: Renderer;\n    private timers: Timers;\n\n    constructor(selectElement: HTMLSelectElement, options: IConfig) {\n        this.config = merge(new Config(), options, true);\n        this.state = StateMapper.mapFromSelect(selectElement, this.config);\n        this.renderer = new Renderer(this.config.classNames);\n        this.dom = this.renderer.render(this.state, selectElement);\n        this.timers = new Timers();\n\n        this.actions = StateManager.proxyActions(this.state, {\n            closeOthers: closeOthers.bind(null, this, cache),\n            scrollToView: scrollToView.bind(null, this.dom, this.timers)\n        }, this.handleStateUpdate.bind(this));\n\n        this.eventBindings = bindEvents({\n            actions: this.actions,\n            config: this.config,\n            dom: this.dom,\n            state: this.state,\n            timers: this.timers\n        });\n\n        this.timers.pollChangeIntervalId = pollForSelectChange(this.dom.select, this.state, this.actions);\n\n        if (this.config.behavior.liveUpdates) {\n            this.timers.pollMutationIntervalId = pollForSelectMutation(\n                this.dom.select,\n                this.state,\n                this.refresh.bind(this)\n            );\n        }\n    }\n\n    public get selectElement(): HTMLSelectElement {\n        return this.dom.select;\n    }\n\n    public get value(): string {\n        return this.state.value;\n    }\n\n    public set value(nextValue: string) {\n        if (typeof nextValue !== 'string') {\n            throw new TypeError('[EasyDropDown] Provided value not a valid string');\n        }\n\n        this.dom.select.value = nextValue;\n    }\n\n    public open(): void {\n        dispatchOpen(this.actions, this.config, this.dom);\n    }\n\n    public close(): void {\n        this.actions.close();\n    }\n\n    public refresh(): void {\n        this.state = merge(\n            this.state,\n            StateMapper.mapFromSelect(this.dom.select, this.config)\n        );\n\n        this.renderer.update(this.state);\n\n        this.dom.group.length = this.dom.option.length = this.dom.item.length = 0;\n\n        Renderer.queryDomRefs(this.dom, ['group', 'option', 'item']);\n    }\n\n    public destroy(): void {\n        this.timers.clear();\n        this.eventBindings.forEach(binding => binding.unbind());\n        this.renderer.destroy();\n\n        const cacheIndex = cache.indexOf(this);\n\n        cache.splice(cacheIndex, 1);\n    }\n\n    private handleStateUpdate(state: State, key: keyof State): void {\n        const {callbacks} = this.config;\n\n        let cb: ICallback;\n\n        this.renderer.update(state, key);\n\n        switch (key) {\n            case 'bodyStatus':\n                if (state.isOpen) {\n                    cb = callbacks.onOpen;\n                } else {\n                    cb = callbacks.onClose;\n                }\n\n                if (typeof cb === 'function') cb();\n\n                break;\n            case 'selectedIndex':\n                cb = callbacks.onSelect;\n\n                if (typeof cb === 'function') (cb as ISelectCallback)(state.value);\n        }\n    }\n}\n\nexport default Easydropdown;","import IConfig from '../Config/Interfaces/IConfig';\n\nimport cache              from './cache';\nimport Easydropdown       from './Easydropdown';\nimport EasydropdownFacade from './EasydropdownFacade';\nimport IFactory           from './Interfaces/IFactory';\n\nfunction factory(\n    selectElementOrSelector: (HTMLSelectElement|string),\n    options: IConfig = {}\n): EasydropdownFacade {\n    let selectElement = selectElementOrSelector;\n\n    if (typeof selectElementOrSelector === 'string') {\n        selectElement = document.querySelector(selectElementOrSelector) as HTMLSelectElement;\n    }\n\n    if (!(selectElement instanceof HTMLSelectElement)) {\n        throw new TypeError('[EasyDropDown] Invalid select element provided');\n    }\n\n    if (selectElement.multiple) {\n        throw new Error(\n            '[EasyDropDown] EasyDropDown does not support the `multiple`' +\n            ' attribute on select elements.'\n        );\n    }\n\n    for (const cachedInstance of cache) {\n        if (cachedInstance.selectElement === selectElement) {\n            return new EasydropdownFacade(cachedInstance);\n        }\n    }\n\n    const instance = new Easydropdown(selectElement, options);\n\n    // @ts-ignore\n\n    cache.push(instance);\n\n    return new EasydropdownFacade(instance);\n}\n\nfunction decorateFactory(factoryFn: any): IFactory {\n    factoryFn.all = (options: IConfig = {}) => {\n        const selects = document.querySelectorAll('select');\n\n        Array.prototype.forEach.call(selects, select => {\n            const instance = factory(select, options);\n\n            return instance;\n        });\n    };\n\n    factoryFn.destroy = () => {\n        const cacheCopy = cache.slice();\n\n        cacheCopy.forEach(instance => instance.destroy());\n    };\n\n    return factoryFn;\n}\n\nconst decoratedFactory = decorateFactory(factory);\n\nexport default decoratedFactory;","if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector;\n}","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","import 'custom-event-polyfill';\n\nimport './Shared/Polyfills/Element.matches';\n\nimport factory from './Easydropdown/factory';\n\nmodule.exports = factory;"],"sourceRoot":""}